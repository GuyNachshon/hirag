# Truly complete frontend with Langflow embedded in same container

FROM python:3.11-slim

# Install nginx and system dependencies
RUN apt-get update && apt-get install -y \
    nginx \
    supervisor \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Langflow
RUN pip install --no-cache-dir langflow

# Remove default nginx config
RUN rm /etc/nginx/sites-enabled/default

# Copy the frontend build files
COPY dist/ /usr/share/nginx/html/

# Create nginx config for port 8087 with Langflow proxy
COPY <<EOF /etc/nginx/sites-available/default
server {
    listen 8087;
    server_name localhost;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Proper MIME types for JS/CSS (Edge browser fix)
    location ~* \.(js|mjs)$ {
        add_header Content-Type application/javascript always;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files \$uri =404;
    }

    location ~* \.css$ {
        add_header Content-Type text/css always;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files \$uri =404;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Static file root
    root /usr/share/nginx/html;
    index index.html;

    # SPA routing - try files first, then fallback to index.html
    location / {
        try_files \$uri \$uri/ /index.html;
    }

    # Cache static assets
    location ~* \.(png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        try_files \$uri =404;
    }

    # RAG API proxy (to external rag-api container)
    location /api/ {
        proxy_pass http://rag-api:8080/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

        if (\$request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Langflow proxy - to localhost:7860 (same container)
    location /langflow/ {
        proxy_pass http://127.0.0.1:7860/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;

        # WebSocket support for Langflow
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

        if (\$request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Longer timeouts for flow execution
        proxy_connect_timeout 120s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Health checks
    location /health {
        proxy_pass http://rag-api:8080/health;
        proxy_set_header Host \$host;
        access_log off;
    }

    location /frontend-health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "frontend+langflow healthy - truly complete\\n";
    }

    location /langflow-health {
        proxy_pass http://127.0.0.1:7860/health;
        access_log off;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
EOF

# Enable the site
RUN ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

# Create supervisor config to run both nginx and langflow
COPY <<EOF /etc/supervisor/conf.d/supervisord.conf
[supervisord]
nodaemon=true
user=root

[program:nginx]
command=nginx -g "daemon off;"
autostart=true
autorestart=true
stderr_logfile=/var/log/nginx.err.log
stdout_logfile=/var/log/nginx.out.log

[program:langflow]
command=langflow run --host 127.0.0.1 --port 7860
autostart=true
autorestart=true
stderr_logfile=/var/log/langflow.err.log
stdout_logfile=/var/log/langflow.out.log
EOF

# Expose port 8087
EXPOSE 8087

# Start supervisor which manages both nginx and langflow
CMD ["/usr/bin/supervisord"]