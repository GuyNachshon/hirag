# DotsOCR Service using official repository with FastAPI adapter
FROM vllm/vllm-openai:v0.9.1

# Install additional dependencies for DotsOCR
RUN pip3 install flash_attn==2.8.0.post2
RUN pip3 install transformers==4.51.3
RUN pip3 install fastapi==0.104.1
RUN pip3 install uvicorn==0.24.0
RUN pip3 install python-multipart
RUN pip3 install pillow
RUN pip3 install requests
RUN pip3 install aiofiles

# Set working directory
WORKDIR /workspace

# Copy the DotsOCR source from our repository
COPY source-code/file_parser/dots_ocr/ ./dots_ocr/

# Environment variables (offline mode disabled for downloads)
ENV PYTHONPATH="/workspace:/workspace/weights:$PYTHONPATH"
ENV HF_HOME=/root/.cache/huggingface
ENV TRANSFORMERS_CACHE=/root/.cache/huggingface

# Download DotsOCR model to weights directory
RUN mkdir -p /workspace/weights

# Copy model download script
COPY source-code/download_dotsocr.py ./download_dotsocr.py
RUN chmod +x download_dotsocr.py
RUN python3 download_dotsocr.py

# Enable offline mode after downloads
ENV HF_HUB_OFFLINE=1
ENV TRANSFORMERS_OFFLINE=1

# Copy FastAPI adapter and startup script
COPY source-code/ocr_fastapi_adapter.py ./ocr_fastapi_adapter.py
COPY source-code/start_dotsocr_service.sh ./start_dotsocr_service.sh

# Make scripts executable
RUN chmod +x start_dotsocr_service.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8002/health || exit 1

EXPOSE 8000 8002

# Override the entrypoint from base image
ENTRYPOINT ["/bin/bash"]
CMD ["./start_dotsocr_service.sh"]